name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            build-name: Linux
            artifact-extension: .tar.gz
            build-command: cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_OPTIMIZATION_FAST_MATH=ON ..
          - os: windows-latest
            build-name: Windows
            artifact-extension: .zip
            build-command: cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_OPTIMIZATION_FAST_MATH=ON -G "MinGW Makefiles" ..

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Setup Clang (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Setup MinGW-LLVM (Windows)
        if: matrix.os == 'windows-latest'
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64

      - name: Create build directory
        run: mkdir build

      - name: Change to build directory
        run: cd build

      - name: Configure CMake
        run: ${{ matrix.build-command }}

      - name: Build
        run: cmake --build .

      - name: Prepare Artifacts
        run: |
          executable_name=$(echo Zagreus-v*)
          mkdir -p "package/$executable_name"
          cp -r * "package/$executable_name"
          cp -r ../. "package/$executable_name-source-code"
          mv "package/$executable_name" "$executable_name${{ matrix.artifact-extension }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build-name }}
          path: "*.${{ matrix.artifact-extension }}"

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Download artifacts
        uses: actions/download-artifact@v4
  
      - name: Combine Artifacts
        run: |
          mkdir combined_artifacts
          cp -r Linux/*.tar.gz combined_artifacts/
          cp -r Windows/*.zip combined_artifacts/
  
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: combined_artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

